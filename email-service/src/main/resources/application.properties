# Server Configuration
server.port=8083
server.servlet.context-path=/api

# Application Information
spring.application.name=email-service

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/email_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Mink281104@
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=120000
spring.datasource.hikari.max-lifetime=1800000
email.sender =worknguyenvotanminh@gmail.com
# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.open-in-view=false

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=465 
spring.mail.username=worknguyenvotanminh@gmail.com
spring.mail.password=gtejknutlxjzzrjr
spring.mail.protocol=smtps
spring.mail.properties.mail.transport.protocol=smtps
spring.mail.properties.mail.smtps.auth=true
spring.mail.properties.mail.smtps.starttls.enable=true
spring.mail.properties.mail.smtps.ssl.enable=true
spring.mail.properties.mail.smtp.starttls.required=false

# Kafka Configuration - Direct Consumer - DISABLED
# spring.kafka.bootstrap-servers=localhost:9092
# spring.kafka.consumer.auto-offset-reset=latest
# spring.kafka.consumer.group-id=email-service-direct-group
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
# spring.kafka.consumer.properties.spring.json.value.default.type=com.kienlongbank.emailservice.dto.UserRegistrationEvent
# spring.kafka.listener.missing-topics-fatal=false

# Force compatibility with older Kafka broker versions
spring.kafka.properties.api.version.request=false
spring.kafka.properties.api.version.fallback.ms=0

# Increase Kafka API timeout values
spring.kafka.properties.default.api.timeout.ms=180000
spring.kafka.consumer.properties.request.timeout.ms=180000
spring.kafka.consumer.properties.session.timeout.ms=90000
spring.kafka.consumer.properties.heartbeat.interval.ms=3000
spring.kafka.consumer.properties.auto.offset.reset.on.error=earliest

# Reduce polling frequency to minimize log spam
spring.kafka.consumer.fetch-max-wait=3000
spring.kafka.consumer.fetch-min-size=1
spring.kafka.listener.poll-timeout=3000
spring.kafka.listener.idle-between-polls=5000

# Disabled Spring Cloud Stream Configuration
# OpenAPI/Swagger Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.paths-to-match=/emails/**, /api/emails/**

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,circuitbreakers,circuitbreakerevents
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

# Tracing Configuration
management.tracing.enabled=true
management.tracing.sampling.probability=1.0

# OpenTelemetry Configuration
otel.traces.exporter=otlp
otel.exporter.otlp.endpoint=http://jaeger:4317
otel.resource.attributes.service.name=email-service

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Auth-Token,Origin,Accept
spring.web.cors.exposed-headers=Authorization,Content-Type
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600

# Logging Configuration
logging.level.com.kienlongbank.emailservice=DEBUG
logging.level.org.springframework.mail=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=TRACE

# Resilience4j Configuration
resilience4j.circuitbreaker.instances.emailService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.emailService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.emailService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.emailService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.emailService.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.emailService.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.emailService.automaticTransitionFromOpenToHalfOpenEnabled=true

resilience4j.retry.instances.emailService.maxAttempts=3
resilience4j.retry.instances.emailService.waitDuration=1000
resilience4j.retry.instances.emailService.retryExceptions[0]=org.springframework.mail.MailException
resilience4j.retry.instances.emailService.retryExceptions[1]=java.io.IOException

resilience4j.ratelimiter.instances.emailService.limitForPeriod=10
resilience4j.ratelimiter.instances.emailService.limitRefreshPeriod=1000
resilience4j.ratelimiter.instances.emailService.timeoutDuration=500
resilience4j.ratelimiter.instances.emailService.registerHealthIndicator=true

spring.main.allow-bean-definition-overriding=true

# Spring Cloud Stream Configuration - UPDATED FOR COMPATIBILITY
spring.cloud.stream.bindings.handleUserRegistration-in-0.destination=user-registration
spring.cloud.stream.bindings.handleUserRegistration-in-0.group=email-service-group
spring.cloud.stream.bindings.handleUserRegistration-in-0.content-type=application/json
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.consumer-properties.spring.json.trusted.packages=*
spring.cloud.stream.kafka.binder.consumer-properties.spring.json.type.mapping=com.kienlongbank.nguyenminh.user.event.UserRegistrationEvent:com.kienlongbank.emailservice.dto.UserRegistrationEvent
spring.cloud.stream.kafka.binder.consumer-properties.default.api.timeout.ms=180000
spring.cloud.stream.kafka.binder.consumer-properties.request.timeout.ms=180000
spring.cloud.stream.kafka.binder.consumer-properties.session.timeout.ms=90000
spring.cloud.stream.kafka.binder.consumer-properties.heartbeat.interval.ms=3000
spring.cloud.stream.kafka.bindings.handleUserRegistration-in-0.consumer.configuration.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.bindings.handleUserRegistration-in-0.consumer.startOffset=latest
spring.cloud.stream.kafka.bindings.handleUserRegistration-in-0.consumer.resetOffsets=false
spring.cloud.stream.kafka.bindings.handleUserRegistration-in-0.consumer.autoCommitOffset=true
spring.cloud.stream.kafka.bindings.handleUserRegistration-in-0.consumer.commitBatchSize=10
spring.cloud.stream.kafka.bindings.handleUserRegistration-in-0.consumer.ackEachRecord=true

# Enable detailed debugging for Cloud Stream
logging.level.org.springframework.cloud.stream=DEBUG
logging.level.org.springframework.integration=DEBUG

# Spring Cloud Stream Function Configuration
spring.cloud.function.scan.enabled=true
spring.cloud.function.definition=handleUserRegistration

# Cấu hình Dubbo khi chạy trên IDE (thay thế các cấu hình cũ)
dubbo.application.name=user-service
dubbo.registry.address=zookeeper://localhost:2181
dubbo.registry.client=curator
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.consumer.check=false
dubbo.consumer.timeout=10000
dubbo.provider.timeout=10000
# Tạo các đường dẫn cần thiết nếu chưa tồn tại
dubbo.registry.dynamic=true
dubbo.registry.group=
dubbo.registry.simplified=true

# Kafka Consumer Deserializer Fix
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.kienlongbank.emailservice.dto.UserRegistrationEvent
