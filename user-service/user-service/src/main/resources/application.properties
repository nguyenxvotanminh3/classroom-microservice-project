# API Context Path
server.servlet.context-path=/api
spring.application.name=user-service

# Cluster Database Configuration
# Write DataSource
spring.datasource.write.jdbcUrl=jdbc:mysql://localhost:3306/user_write_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.write.username=root
spring.datasource.write.password=Mink281104@
spring.datasource.write.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.write.connection-timeout=60000
spring.datasource.write.maximum-pool-size=10
spring.datasource.write.minimum-idle=5
spring.datasource.write.idle-timeout=30000
spring.datasource.write.max-lifetime=1800000

# Read DataSource (Multiple instances for load balancing)
spring.datasource.read.urls=jdbc:mysql://localhost:3306/user_read_db1?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC,jdbc:mysql://localhost:3306/user_read_db2?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.read.username=root
spring.datasource.read.password=Mink281104@
spring.datasource.read.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.read.connection-timeout=60000
spring.datasource.read.maximum-pool-size=10
spring.datasource.read.minimum-idle=5
spring.datasource.read.idle-timeout=30000
spring.datasource.read.max-lifetime=1800000
spring.datasource.read.auto-commit=true
spring.datasource.read.read-only=true

# Database Synchronization Configuration
app.database.sync.enabled=true
app.database.sync.interval=5000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true

# JDBC Configuration bổ sung 
spring.jdbc.template.fetch-size=100
spring.jdbc.template.max-rows=500
# Vô hiệu hóa JTA để tránh xung đột transaction
spring.jta.enabled=false

# Transaction configuration
spring.transaction.default-timeout=30
# Chỉ định loại transaction
spring.transaction.rollback-on-commit-failure=true

# Server Configuration
server.port=8080

# Classroom Database Configuration
spring.datasource.classroom.jdbcUrl=jdbc:mysql://localhost:3306/nguyenminh_classroom?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.classroom.username=root
spring.datasource.classroom.password=Mink281104@
spring.datasource.classroom.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.classroom.hikari.connection-timeout=60000
spring.datasource.classroom.hikari.maximum-pool-size=10
spring.datasource.classroom.hikari.minimum-idle=5
spring.datasource.classroom.hikari.idle-timeout=120000
spring.datasource.classroom.hikari.max-lifetime=1800000

# Schema initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.continue-on-error=true

# OpenAPI/Swagger Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.paths-to-match=/users/**, /api/users/**

# JWT Configuration
jwt.expiration=18000000
jwt.secret=WW91clN1cGVyU2VjcmV0S2V5NDhCeXRlc0xvbmdGb3JITDM4NEFsZ29yaXRobQ==

# Dubbo configuration
dubbo.application.name=user-service
dubbo.registry.address=zookeeper://localhost:2181
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.consumer.check=false
dubbo.scan.base-packages=com.kienlongbank.nguyenminh.user.service.impl

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Auth-Token,Origin,Accept
spring.web.cors.exposed-headers=Authorization,Content-Type
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,circuitbreakers,circuitbreakerevents
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

# Metrics tags
management.metrics.tags.application=${spring.application.name}

# Tracing Configuration
management.tracing.enabled=true
management.tracing.sampling.probability=1.0

# OpenTelemetry Configuration
otel.traces.exporter=otlp
otel.exporter.otlp.endpoint=http://jaeger:4317
otel.resource.attributes.service.name=user-service

# Spring Cloud Stream Configuration for Kafka
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.bindings.userRegistrationSupplier-out-0.destination=user-registration
spring.cloud.stream.bindings.userRegistrationSupplier-out-0.producer.required-groups=email-service-group
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.required-acks=1
spring.cloud.stream.kafka.binder.min-partition-count=1
spring.kafka.bootstrap-servers=localhost:9092

# Logging
logging.level.org.springframework.kafka=DEBUG
logging.level.org.springframework.cloud.stream=DEBUG
logging.level.org.apache.kafka=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=TRACE
logging.level.com.kienlongbank.nguyenminh=DEBUG

# Spring Cloud Function auto-configuration
spring.cloud.function.scan.enabled=false
spring.cloud.function.definition= 

# Resilience4j CircuitBreaker Configuration
resilience4j.circuitbreaker.instances.userService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.userService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.userService.minimum-number-of-calls=20 