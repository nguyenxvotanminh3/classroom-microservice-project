version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zookeeper-data:/var/lib/zookeeper/data
      - ./zookeeper-log:/var/lib/zookeeper/log
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_DOCKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
    depends_on:
      - zookeeper

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - prometheus

  vault:
    build:
      context: .
      dockerfile: Dockerfile.vault
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
    volumes:
      - ./vault-data:/vault/data
      - ./vault-file:/vault/file
      - ./vault-config:/vault/config
      - ./vault-init-simple.sh:/vault/init-simple.sh
    networks:
      - app-network
    command: sh -c "vault server -config=/vault/config/vault.json & sleep 5 && /vault/init-simple.sh && tail -f /dev/null"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
      - "4319:4317"
      - "4318:4318"
    networks:
      - app-network

  zookeeper-init:
    image: confluentinc/cp-zookeeper:7.3.0
    depends_on:
      - zookeeper
    volumes:
      - ./create-dubbo-paths.sh:/tmp/create-dubbo-paths.sh
    command: sh -c "cat /tmp/create-dubbo-paths.sh > /tmp/init.sh && chmod +x /tmp/init.sh && /tmp/init.sh"
    networks:
      - app-network

  # --- Temporal Server ---
  temporal:
    image: temporalio/auto-setup:1.19.1
    container_name: temporal
    ports:
      - "7233:7233"
    environment:
      - DB=mysql
      - MYSQL_SEEDS=host.docker.internal
      - MYSQL_USER=root
      - MYSQL_PWD=Mink281104@
      - MYSQL_DB=temporal
      - MYSQL_PORT=3306
    networks:
      - app-network

  temporal-ui:
    image: temporalio/ui:2.10.3
    container_name: temporal-ui
    ports:
      - "8088:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_UI_PORT=8080
    networks:
      - app-network
    depends_on:
      - temporal

networks:
  app-network:
    driver: bridge

volumes:
  grafana-storage:
  redis-data:
  vault-data:
  vault-file:
  vault-config:
